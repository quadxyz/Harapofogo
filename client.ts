const api = "https://menetrendek.hu/menetrend/interface/index.php"

export const dateString = (date: Date) => {
    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`
}

export const autocomplete = async (input: string) => {
    const date = new Date()
    const body = {
        "func": "getStationOrAddrByTextC",
        "params": {
            "inputText": input,
            "searchIn": [
                "stations"
            ],
            "searchDate": `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`,
            "maxResults": 20,
            "networks": [
                1,
                10,
                24
            ]
        }
    }
    return await (await fetch(api, { method: "POST", body: JSON.stringify(body) })).json()
}

export const routes = async (date: Date, from: number, to: number) => {
    const body = {
        "func": "getRoutes",
        "params": {
            "datum": `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`,
            "ext_settings": "block",
            "honnan_ls_id": 0,
            "honnan_settlement_id": from,
            "honnan_site_code": "",
            "hour": date.getHours(),
            "min": date.getMinutes(),
            "hova_ls_id": 0,
            "hova_settlement_id": to,
            "hova_site_code": "",
            "maxatszallas": "5",
            "maxwalk": 1000,
            "timeWindow": 0,
            "naptipus": 0,
            "odavissza": 0,
            "preferencia": 0,
            "rendezes": "1",
            "discountPercent": "0",
            "utirany": "oda",
            "lang": "hu",
            "dayPartText": "Egész nap",
            "orderText": "Indulási idő",
            "networks": [
                1,
                10,
                24
            ],
        }
    }
    return await (await fetch(api, { method: "POST", body: JSON.stringify(body) })).json()
}

export const exposition = async (runs: any, nativeData: any) => {
    const body = {
        "debug": 0,
        "type": "",
        "query": "jarat_kifejtes_text_jsonC",
        "datum": "2022-10-01",
        "lang": "hu",
        "fieldvalue": {
            "runcount": 2,
            "runs": {
                "0": {
                    "0": 1,
                    "1": 1,
                    "2": 1482,
                    "3": 599,
                    "4": 3150,
                    "5": 4554,
                    "6": 340,
                    "7": 420,
                    "8": 71400,
                    "9": 304,
                    "10": 2352538,
                    "11": 1,
                    "12": 100000,
                    "13": 163988,
                    "14": 304,
                    "15": "1507",
                    "16": "120",
                    "17": 0,
                    "18": 0,
                    "19": 601641,
                    "20": 205153,
                    "21": 640745,
                    "22": 162429,
                    "23": "Székesfehérvár, autóbusz-állomás",
                    "24": "Dunaföldvár, autóbusz-állomás",
                    "25": "Győr - Székesfehérvár - Szeged",
                    "26": 0,
                    "27": 0,
                    "28": 0,
                    "29": "naponta",
                    "30": 0,
                    "31": "O",
                    "32": 0,
                    "33": 0,
                    "34": 0,
                    "35": 0,
                    "36": "",
                    "37": "",
                    "38": "",
                    "39": 1,
                    "40": 6,
                    "41": 1490,
                    "42": 0,
                    "43": 0,
                    "44": 0,
                    "45": "",
                    "46": 745,
                    "47": 150,
                    "48": 0,
                    "49": 0,
                    "50": 0,
                    "51": "Székesfehérvár",
                    "52": "Dunaföldvár",
                    "53": 0,
                    "54": "",
                    "55": 0,
                    "56": "Walking",
                    "57": "",
                    "58": "",
                    "59": "",
                    "60": "",
                    "61": "",
                    "62": ""
                },
                "1": {
                    "0": 1,
                    "1": 2,
                    "2": 3150,
                    "3": 4554,
                    "4": 486,
                    "5": 4595,
                    "6": 425,
                    "7": 448,
                    "8": 22800,
                    "9": 240,
                    "10": 826494,
                    "11": 1,
                    "12": 100000,
                    "13": 165092,
                    "14": 240,
                    "15": "1134",
                    "16": "301",
                    "17": 0,
                    "18": 0,
                    "19": 640745,
                    "20": 162429,
                    "21": 635504,
                    "22": 141770,
                    "23": "Dunaföldvár, autóbusz-állomás",
                    "24": "Paks, autóbusz-állomás",
                    "25": "Siklós - Pécs - Szekszárd - Dunaújváros - Budapest",
                    "26": 0,
                    "27": 0,
                    "28": 0,
                    "29": "naponta",
                    "30": 0,
                    "31": "O",
                    "32": 0,
                    "33": 1,
                    "34": 0,
                    "35": 0,
                    "36": "",
                    "37": "",
                    "38": "",
                    "39": 9,
                    "40": 10,
                    "41": 465,
                    "42": 0,
                    "43": 0,
                    "44": 0,
                    "45": "",
                    "46": 235,
                    "47": 45,
                    "48": 0,
                    "49": 0,
                    "50": 0,
                    "51": "Dunaföldvár",
                    "52": "Paks",
                    "53": 0,
                    "54": "",
                    "55": 0,
                    "56": "Walking",
                    "57": "",
                    "58": "",
                    "59": "",
                    "60": "",
                    "61": "",
                    "62": ""
                }
            }
        },
        "nativeData": [
            {
                "Count": 1,
                "Sequence": 1,
                "DepartureStation": 599,
                "DepartureTime": 340,
                "DepStationName": "Székesfehérvár, autóbusz-állomás",
                "DepartureSettle": 1482,
                "FromSettle": "Székesfehérvár",
                "ArrivalSettle": 3150,
                "ArrivalStation": 4554,
                "ArrStationName": "Dunaföldvár, autóbusz-állomás",
                "ArrivalTime": 420,
                "Distance": 71400,
                "RestrictionId": 304,
                "RunId": 2352538,
                "NetworkId": 1,
                "WalkDistance": 100000,
                "LrId": 163988,
                "RdId": 304,
                "Domain_code": "1507",
                "Number": "120",
                "DepartureOutside": 0,
                "ArrivalOutside": 0,
                "DepEovX": 601641,
                "DepEovY": 205153,
                "ArrEovX": 640745,
                "ArrEovY": 162429,
                "DomainCompanyName": "Győr - Székesfehérvár - Szeged",
                "BkszDomainCode": "0",
                "LowFloor": 0,
                "HighSpeed": 0,
                "Explanation": "naponta",
                "Prebuy": 0,
                "RunType": "O",
                "Superior": 0,
                "Wifi": 0,
                "Internet": 0,
                "Detour": 0,
                "JourneyName": "",
                "Remark": "",
                "LocalDomainCode": "",
                "DepartureSeqnr": 1,
                "ArrivalSeqnr": 6,
                "Fare": 1490,
                "FareSumExtra": 0,
                "FareExtra": 0,
                "FareSeatRes": 0,
                "RunCategory": "",
                "FareFifty": 745,
                "FareNinty": 150,
                "LinkStation": 0,
                "Bube": 0,
                "PeakMemory": 0,
                "ToSettle": "Dunaföldvár",
                "RunNetexId": "                                                               ",
                "RunVersionId": 163988,
                "DepartureStationNetexId": "                                                               ",
                "DepartureStationVersionId": 1,
                "ArrivalStationNetexId": "                                                               ",
                "ArrivalStationVersionId": 1,
                "ReserveOnline": 0,
                "Hitcount": 21,
                "ChangeTime": 0,
                "ChangeMode": "Walking",
                "ChangeRoute": "",
                "FromPs": 737745,
                "ToPs": 590590,
                "InternalId": 116080,
                "FromBay": "3",
                "ToBay": "",
                "Owner": 45,
                "FirstClassFee": 0,
                "OwnerName": "Volánbusz"
            },
            {
                "Count": 1,
                "Sequence": 2,
                "DepartureStation": 4554,
                "DepartureTime": 425,
                "DepStationName": "Dunaföldvár, autóbusz-állomás",
                "DepartureSettle": 3150,
                "FromSettle": "Dunaföldvár",
                "ArrivalSettle": 486,
                "ArrivalStation": 4595,
                "ArrStationName": "Paks, autóbusz-állomás",
                "ArrivalTime": 448,
                "Distance": 22800,
                "RestrictionId": 240,
                "RunId": 826494,
                "NetworkId": 1,
                "WalkDistance": 100000,
                "LrId": 165092,
                "RdId": 240,
                "Domain_code": "1134",
                "Number": "301",
                "DepartureOutside": 0,
                "ArrivalOutside": 0,
                "DepEovX": 640745,
                "DepEovY": 162429,
                "ArrEovX": 635504,
                "ArrEovY": 141770,
                "DomainCompanyName": "Siklós - Pécs - Szekszárd - Dunaújváros - Budapest",
                "BkszDomainCode": "0",
                "LowFloor": 0,
                "HighSpeed": 0,
                "Explanation": "naponta",
                "Prebuy": 0,
                "RunType": "O",
                "Superior": 0,
                "Wifi": 1,
                "Internet": 0,
                "Detour": 0,
                "JourneyName": "",
                "Remark": "",
                "LocalDomainCode": "",
                "DepartureSeqnr": 9,
                "ArrivalSeqnr": 10,
                "Fare": 465,
                "FareSumExtra": 0,
                "FareExtra": 0,
                "FareSeatRes": 0,
                "RunCategory": "",
                "FareFifty": 235,
                "FareNinty": 45,
                "LinkStation": 0,
                "Bube": 0,
                "PeakMemory": 0,
                "ToSettle": "Paks",
                "RunNetexId": "                                                               ",
                "RunVersionId": 165092,
                "DepartureStationNetexId": "                                                               ",
                "DepartureStationVersionId": 1,
                "ArrivalStationNetexId": "                                                               ",
                "ArrivalStationVersionId": 1,
                "ReserveOnline": 0,
                "Hitcount": 21,
                "ChangeTime": 0,
                "ChangeMode": "Walking",
                "ChangeRoute": "",
                "FromPs": 590590,
                "ToPs": 581804,
                "InternalId": 49857,
                "FromBay": "3",
                "ToBay": "",
                "Owner": 21,
                "FirstClassFee": 0,
                "OwnerName": "Volánbusz"
            }
        ]
    }
    return await (await fetch(api, { method: "POST", body: JSON.stringify(body) })).json()
}